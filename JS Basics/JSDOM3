s ### Document Fragment

In this code, we're adding 100 paragraphs to the document body. We'll explore three different methods:

**1. Creating Elements One by One:**

```javascript
// Adding 100 paras
// const t1 = performance.now();
// for (i = 0; i <= 100; i++) {
//   let newElement = document.createElement("p");
//   newElement.textContent = "This is Para" + i;

//   document.body.appendChild(newElement);
// }
// const t2 = performance.now();
// console.log("This took " + (t2 - t1) + "ms");
```

This method involves creating each paragraph element individually and appending it to the document body. It's straightforward but not very efficient.

**2. Creating Elements in a Fragment:**

```javascript
//optimising a bit
// const t3 = performance.now();
// let myDiv = document.createElement("div");

// for (i = 0; i <= 100; i++) {
//   let element = document.createElement("p");
//   element.textContent = "This is Para" + i;

//   myDiv.appendChild(element);
// }

// document.body.appendChild(myDiv);
// const t4 = performance.now();
// console.log("This took " + (t4 - t3) + "ms");
```

This method is slightly better. We create a `<div>` element, append all the paragraph elements to it, and then append the `<div>` to the document body. This reduces the number of reflows and repaints.

**3. Using a Document Fragment:**

```javascript
//Best Practice
// let fragment = document.createDocumentFragment();
// for(let i=1; i<=100; i++){
//     let newElement = document.createElement('p');
//     newElement.textContent = 'Paragraph '+i;

//     fragment.appendChild(newElement);
// }

// document.body.appendChild(fragment); //1 Reflow and 1 Repaint
```

This is the most efficient method. We create a document fragment, which is a lightweight container that doesn't affect the document layout. We append all the paragraph elements

Generated by [BlackboxAI](https://www.blackbox.ai)
